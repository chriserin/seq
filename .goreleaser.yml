version: 2
project_name: seq

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  # Linux build using Docker for CGO cross-compilation
  - id: linux
    binary: seq
    env:
      - CGO_ENABLED=1
    goos:
      - linux
    goarch:
      - amd64
    flags:
      - -tags=lua54
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
    # Use existing Dockerfile for Linux build
    hooks:
      pre:
        - docker build -t seq-builder .
        - docker create --name seq-temp seq-builder
        - docker cp seq-temp:/seq ./seq-linux-{{.Arch}}
        - docker rm seq-temp
    skip: false

  # macOS build (handled by GitHub Actions macOS runner)
  - id: darwin
    binary: seq
    env:
      - CGO_ENABLED=1
    goos:
      - darwin
    goarch:
      - amd64
      - arm64
    flags:
      - -tags=lua54
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
    # Skip for local builds (use GitHub Actions for Darwin)
    skip: true
archives:
  - id: default
    builds:
      - linux
      - darwin
    format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE*
      - CHANGELOG*
      - config/**/*

checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_checksums.txt'
  algorithm: sha256

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^ci:'
  groups:
    - title: "Features"
      regexp: "^feat"
      order: 0
    - title: "Bug fixes"
      regexp: "^fix"
      order: 1
    - title: "Others"
      order: 999

# Release configuration
release:
  draft: false
  prerelease: auto
  name_template: "{{ .ProjectName }} {{ .Version }}"
  header: |
    ## seq {{ .Version }}

    A powerful sequencer with Lua scripting support and MIDI capabilities.
  footer: |
    ## Installation

    Download the appropriate binary for your platform from the assets above.

    **Thanks to all contributors!**

# Docker configuration (optional)
dockers:
  - id: seq-docker
    ids:
      - linux
    image_templates:
      - "{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:{{ .Version }}-amd64"
      - "{{ .Env.DOCKER_REGISTRY }}/{{ .ProjectName }}:latest-amd64"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.created={{ .Date }}"
    skip_push: true # Set to false when you want to push to registry

