name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  GO_VERSION: '1.24'

jobs:
  # Linux build using Docker for CGO
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Linux binary
        run: |
          docker build -t seq-builder .
          docker create --name seq-temp seq-builder
          docker cp seq-temp:/seq ./seq-linux-amd64
          docker rm seq-temp
          chmod +x seq-linux-amd64

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: seq-linux-amd64
          path: seq-linux-amd64

  # macOS build using native runner
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install dependencies
        run: |
          brew install lua
          # Verify installations
          lua -v
          pkg-config --exists lua5.4 || pkg-config --exists lua || echo "Lua pkg-config not found"

      - name: Build macOS binary
        env:
          GOOS: darwin
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 1
        run: |
          # Set up environment for Lua linking
          export CGO_LDFLAGS="-framework CoreMIDI -framework CoreFoundation -llua"
          export CGO_CFLAGS="-I$(brew --prefix lua)/include"

          # Build the binary
          go build -tags lua54 -ldflags "-s -w" -o seq-darwin-${{ matrix.arch }}

          # Verify the binary
          file seq-darwin-${{ matrix.arch }}
          otool -L seq-darwin-${{ matrix.arch }} || true

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: seq-darwin-${{ matrix.arch }}
          path: seq-darwin-${{ matrix.arch }}

  # Create release using GoReleaser
  release:
    if: github.event_name == 'workflow_dispatch'  # Only run on manual trigger
    needs: [build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Verify artifacts
        run: |
          ls -la seq-*
          file seq-* || true

      - name: Create release directories
        run: |
          mkdir -p dist/linux_linux_amd64_v1
          mkdir -p dist/darwin_darwin_amd64_v1
          mkdir -p dist/darwin_darwin_arm64_v8.0

          # Move binaries to GoReleaser expected locations
          mv seq-linux-amd64 dist/linux_linux_amd64_v1/seq
          mv seq-darwin-amd64 dist/darwin_darwin_amd64_v1/seq
          mv seq-darwin-arm64 dist/darwin_darwin_arm64_v8.0/seq

          # Make them executable
          chmod +x dist/*/seq

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --config .goreleaser.yml --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: Test the binaries
  test-binaries:
    needs: [build-linux, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'  # Only run on manual trigger
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Test Linux binary
        run: |
          chmod +x seq-linux-amd64
          ./seq-linux-amd64 --version || echo "Linux binary test completed"

      - name: Test macOS binaries (file check only)
        run: |
          file seq-darwin-amd64
          file seq-darwin-arm64
          echo "macOS binaries verified"

